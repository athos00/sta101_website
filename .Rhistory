serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
library(tidyverse)
library(sf)
mpg
nc <- st_read("data/nc_regvoters.shp", quiet = TRUE)
nc
nc <- st_read("data/nc_regvoters.shp", quiet = TRUE)
ggplot(nc) +
geom_sf() +
labs(title = "North Carolina counties")
ggplot(nc) +
geom_sf(color = "darkgreen", size = 1.5) +
labs(title = "North Carolina counties with theme and aesthetics") +
theme_bw()
ggplot(nc) +
geom_sf(aes(fill = total)) +
scale_fill_gradient(low = "#fee8c8", high = "#7f0000") +
labs(title = "The Triangle and Charlotte have the Most Voters",
fill = "# cases") +
theme_bw()
ggplot(nc) +
geom_sf(aes(fill = total)) +
scale_fill_gradient(low = "#fee8c8", high = "#7f0000") +
labs(title = "The Triangle and Charlotte have the Most Voters",
fill = "# cases") +
theme_bw() +
theme(text = element_text(size = 20))
ggsave("NC.png")
ggplot(nc) +
geom_sf(aes(fill = total)) +
scale_fill_gradient(low = "#fee8c8", high = "#7f0000") +
labs(title = "The Triangle and Charlotte have the Most Voters",
fill = "# cases") +
theme_bw() +
theme(text = element_text(size = 30))
ggsave("NC.png")
ggplot(nc) +
geom_sf(aes(fill = total)) +
scale_fill_gradient(low = "#fee8c8", high = "#7f0000") +
labs(title = "The Triangle and Charlotte have the Most Voters",
fill = "# cases") +
theme_bw() +
theme(text = element_text(size = 30))
ggsave("NC.png")
stop_server()
build_site()
serve_site()
stop_server()
stop_server()
build_site()
library(blogdown)
build_site()
serve_site()
install.packages("hexSticker")
library(hexSticker)
s <- sticker(~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab=""),
package="hexSticker", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
library(emo)
?emo
library(emo)
emo::fisher_lst
?emo::ji()
emo::ji("knit")
emo::ji("yarn")
emo::ji("knitR")
emo::ji("knitr")
emo::ji("knitter")
?eval
library(emo)
knitr::opts_chunk$set(package.startup.message = FALSE)
library(emo)
library(knitr)
knitr::opts_chunk$set(package.startup.message = FALSE)
?datasaurus_dozen
library(datasauRus)
?datasaurus_dozen
datasaurus_dozen %>%
count(dataset)
library(tidyverse)
count(datasaurus_dozen, dataset)
datasaurus_dozen %>%
count(dataset) %>%
print(13)
datasaurus_dozen %>%
count(dataset)
View(datasaurus_dozen)
view(datasaurus_dozen)
dino_data %>%
summarize(r = cor(x, y))
datasaurus_dozen$dataset
datasaurus_dozen$away %>%
plot()
datasaurus_dozen$away %>%
plot(x, y)
datasaurus_dozen %>%
filter(dataset == "away") %>%
ggplot(aes(x = x, y = y)) +
geom_point()
?datasaurus_dozen
count(datasaurus_dozen, dataset)
dino_data <- datasaurus_dozen %>%
filter(dataset == "x_shape")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
dino_data <- datasaurus_dozen %>%
filter(dataset == "circle")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
dino_data <- datasaurus_dozen %>%
filter(dataset == "dino")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) +
geom_point()
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
geom_point()+
facet_wrap(~ dataset, ncol = 3) +
theme(legend.position = "none")
datasaurus_dozen %>%
group_by(dataset) %>%
summarize(r = cor(x, y))
library(openintro)
?openintro
data(fish_oil_18)
force(fish_oil_18)
View(fish_oil_18)
View(fish_oil_18)
fish_oil_18$stroke
fish_oil_18$cancer_death
fish_oil_18$stroke_death
library(tidyverse)
datasaurus_dozen
dino_data %>%
summarize(mu_x = mean(x), mu_y = mean(y))
summarize(dino_data, mu_x = mean(x), mu_y = mean(y))
dino_data %>%
summarize(mu_x = mean(x), mu_y = mean(y))
datasaurus_dozen
datasaurus_dozen %>%
count(dataset)
star_data <- datasaurus_dozen %>%
filter(dataset == "star")
ggplot(data = star_data, mapping = aes(x = x, y = y)) +
geom_point()
star_data %>%
summarize(r = cor(x, y))
ggplot(data = datasaurus_dozen,
aes(x = x, y = y)) +
geom_point() +
facet_wrap( ~ dataset)
ggplot(data = datasaurus_dozen,
aes(x = x, y = y, color = dataset)) +
geom_point() +
facet_wrap( ~ dataset)
datasaurus_dozen %>%
group_by(dataset) %>%
summarize(mean_x = mean(x),
mean_y = mean(y))
5+6+6+5+3+6+7
5+6+6+5+3+6+7+8
7+6+6+6+3+6+8+8
stop_server()
build_site()
serve_site()
emo::ji("slides")
emo::ji("ppt")
emo::ji("powerpoint")
emo::ji("book")
emo::ji("computer")
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
readxl::read_xlsx(path = "https://duke.app.box.com/file/972639544657?s=5d31hvs4jkwcn4qpwz827zkpiaic7177")
readxl::read_xlsx(path = "https://duke.box.com/s/5d31hvs4jkwcn4qpwz827zkpiaic7177")
?readxl
install.packages("pdftools")
?pdftools
library(pdftools)
?pdftools
library(xaringanthemer)
install.packages("xaringanthemer")
?text_font_google
# For better figure resolution
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.retina = 3,
dpi = 300, fig.width = 6,
fig.asp = 0.618,
out.width = "75%",
fig.align = "center")
# set consistent theme
theme_set(ggplot2::theme_minimal())
color_palette <- list(gray = "#999999",
green = "#009E73",
yellow = "#F0E442",
darkblue = "#0072B2",
purple = "#800080",
orange = "#ff8c00",
cyan = "#008B8B"
)
knitr::include_graphics("img/01/basic_tree.png")
# magick::image_read_pdf("img/01/alignment_xaringan.pdf",
# pages = 1)
# magick::image_read_pdf("img/01/MCC-WNV.pdf",
#                        pages = 1)
# knitr::include_graphics("img/01/MCC-WNV.pdf")
knitr::include_graphics("img/01/alignment.png")
stop_server()
build_site()
serve_site()
download.file("https://sta101.github.io/static/appex/ae1.Rmd",
destfile = "ae1.rmd")
data(starwars)
force(starwars)
data(starwars)
data(cars)
cars
?cars
library(tidyverse)
avatar_raw <- read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-11/avatar.csv")
avatar_raw %>%
count(character, sort = TRUE)
avatar_raw
avatar_raw %>%
count(character())
avatar_raw %>%
count(characte)
avatar_raw %>%
count(character)
(avatar_raw %>%
count(character))$character
avatar_raw %>%
count(character) %>%
select()
avatar_raw %>%
count(character)
avatar_raw %>%
count(character) %>%
select(character)
avatar = avatar_raw %>%
count(character) %>%
select(character)
avatar
write_csv(avatar, "~/Desktop/avatar.csv")
roster = read_csv("data/sample-survey.csv")
roster = read_csv("./data/sample-survey.csv")
roster = read_csv("static/appex/data/sample-survey.csv")
pdw
pwd
?left_join
?library
stop_server()
build_site()
serve_site()
roster = read_csv("https://sta101.github.io/static/appex/data/sample-roster.csv")
stop_server()
build_site()
serve_site()
roster = read_csv("https://sta101.github.io/static/appex/data/sample-roster.csv")
survey = read_csv("https://sta101.github.io/static/appex/data/sample-survey.csv")
glimpse(survey)
view(survey)
roster %>%
left_join(survey, by = "email")
survey %>%
group_by(bender) %>%
summarize(mean(cat-dog))
survey %>%
group_by(bender)
survey %>%
mutate(pet == ifelse(cat-dog == "dog", 1, 0)) %>%
group_by(bender) %>%
summarize(mean(pet))
survey %>%
mutate(pet = ifelse(cat-dog == "dog", 1, 0)) %>%
group_by(bender) %>%
summarize(mean(pet))
survey %>%
mutate(pet = ifelse(cat-dog == "dog", 1, 0))
survey %>%
mutate(pet = ifelse(cat-dog == dog, 1, 0))
survey %>%
mutate(pet = ifelse(cat-dog == "dog", 1, 0))
survey %>%
mutate(pet = cat-dog
survey %>%
mutate(pet = cat-dog)
survey
survey %>%
mutate(pet = cat_dog)
stop_server()
build_site()
serve_site()
roster = read_csv("https://sta101.github.io/static/appex/data/sample-roster.csv")
survey = read_csv("https://sta101.github.io/static/appex/data/sample-survey.csv")
roster
survey
roster = read_csv("https://sta101.github.io/static/appex/data/sample-roster.csv")
survey = read_csv("https://sta101.github.io/static/appex/data/sample-survey.csv")
roster
roster = read_csv("https://sta101.github.io/static/appex/data/sample-roster.csv")
survey = read_csv("https://sta101.github.io/static/appex/data/sample-survey.csv")
roster
sruvey
survey
glimpse(survey)
view(survey)
roster %>%
left_join(survey, by = "email")
count(survey, bender)
survey %>%
mutate(pet = ifelse(cat_dog == "dog", 1, 0)) %>%
group_by(bender) %>%
summarize(proportion_dog = mean(pet))
?%>%
x
5
stop_server()
blogdown:::preview_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
roster = read_csv("~/Downloads/sta101-roster.csv")
survey = read_csv("~/Downloads/sta101-survey.csv")
survey
roster
roster = read_csv("~/Downloads/sta101-roster.csv")
roster
roster %>%
left_join(survey)
roster %>%
left_join(survey, by = "email")
roster = read_csv("~/Downloads/sta101-roster.csv")
survey = read_csv("~/Downloads/sta101-survey.csv")
roster %>%
left_join(survey, by = "email")
view(roster %>%
left_join(survey, by = "email"))
roster
survey
survey %>%
count(name)
survey %>%
count(Name)
View(survey)
stop_server()
build_site()
serve_site()
download.file("https://sta101.github.io/static/labs/lab01_template.Rmd", destfile = "~/Desktop/lab01.rmd")
download.file("https://sta199-sp22-003.netlify.app/appex/ae01.Rmd", destfile = "~/Desktop/test.rmd")
stop_server9)
stop_server9)
stop_server()
build_site()
serve_site()
stop_server9)
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
?palmerpenguins
library(palmerpenguins)
?palmerpenguins
data(palmerpenguins)
data(penguins)
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
?download.file
stop_server()
build_site()
build_site()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
?slice
penguins
penguins %>%
mutate(bill_area = bill_length_mm * bill_depth_mm)
penguins %>%
mutate(bill_area = bill_length_mm * bill_depth_mm) %>%
select(-year)
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm)
# Example 1
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(-year)
# Example 2
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(species, island, bill_length_mm, bill_depth_mm, flipper_length_mm, body_mass_g, sex, bill_area_mm2)
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(bill_area_m2, bill_length_mm)
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(bill_area_mm2, bill_length_mm)
arrange(bill_area_mm2)
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(bill_area_mm2, bill_length_mm) %>%
arrange(bill_area_mm2)
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(bill_area_mm2, bill_length_mm) %>%
arrange(bill_area_mm2, desc=TRUE)
?arrange
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(bill_area_mm2, bill_length_mm) %>%
arrange(desc(bill_area_mm2))
penguins
count(bill_length_mm)
count(penguins, bill_length_mm)
count(penguins, bill_length_mm)  %>%
filter(n > 1)
penguins %>%
mutate(bill_area_mm2 = bill_length_mm * bill_depth_mm) %>%
select(bill_area_mm2, bill_length_mm) %>%
arrange(desc(bill_area_mm2))
penguins %>%
mutate(id = seq(1:nrow(penguins)))
penguins %>%
mutate(id = seq(1:nrow(penguins)))
?penguins
iqr(penguins$bill_length_mm)
?iqr
quartiles(penguins$bill_length_mm)
quantile(penguins$bill_length_mm, 0.25)
IQR(penguins$bill_length_mm)
IQR(penguins$bill_length_mm, na.rm= TRUE)
var(penguins$bill_length_mm)
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_histogram()
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_histogram() +
vline(x = 45)
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_histogram() +
geom_vline(x = 45)
?geom_vline
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_histogram() +
geom_vline(xintercept = 45)
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_histogram() +
geom_vline(xintercept = 45, color = 'red')
geom_density
?geom_density
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_density() #+
#geom_vline(xintercept = __, color = 'red')
penguins %>%
ggplot(aes(x = bill_length_mm)) +
geom_histogram() +
labs(title = "Penguin bill length (mm)", x = "Bill length(mm)")
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
