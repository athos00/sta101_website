#  tmon <- format(tmon, format="%m/%d")
#  tfri <- format(tfri, format="%m/%d")
#  zadv <- sprintf("%02d", adv)
#  tmp <- paste("Week ",zadv,sep='',", ", tmon," - ",tfri)
#  return(tmp)
# }
#
# advdate(mon, 1)
# advdate(mon, 2)
schedule
x$wday
weekdays(x)
trunc(weekdays(x), 3)
?truncate
str_trunc(x, 3)
x
str_trunc(weekdays(x), 3)
weekdays(x)
str_trunc(weekdays(x), 3)
schedule$dayOfWeek
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(as.Date(allDates))) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule
schedule$dayOfWeek
schedule$allDates
weekdays(schedule$allDates)
weekdays(schedule$allDates, abbreviate=T)
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates)
schedule$dayOfWeek = dayOfWeek(schedule$allDates, abbreviate=T)
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates)
schedule$dayOfWeek = weekdays(schedule$allDates, abbreviate=T)
schedule = schedule %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule
weekdays(allDates, abbreviate=T )
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates)
dayOfWeek = weekdays(allDates, abbreviate=T) %>%
schedule = schedule %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates)
dayOfWeek = weekdays(allDates, abbreviate=T)
schdeule
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T))
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T))
schedule = schedule %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T))
schedule
# set these:
firstDay = as.Date("2022-01-07")
firstDayID = "Fri"
lastDay = as.Date("2022-04-20")
lectureDays = c("Wed", "Fri")
labDays = c("Tue")
holidays = as.Date(c("2022-03-08", "2022-03-09", "2022-03-11"))
# numbering
# getDayNumber = function(day) {
#     dayNumber = case_when(
#     day == "Mon" ~ 1,
#     day == "Tue" ~ 2,
#     day == "Wed" ~ 3,
#     day == "Thu" ~ 4,
#     day == "Fri" ~ 5,
#     day == "Sat" ~ 6,
#     day == "Sun" ~ 7
#   )
#   return(dayNumber)
# }
#
# getDayFromNumber = function(dayNumber) {
#   day = case_when(
#     dayNumber == 1 ~ "Mon",
#     dayNumber == 2 ~ "Tue",
#     dayNumber == 3 ~ "Wed",
#     dayNumber == 4 ~ "Thu",
#     dayNumber == 5 ~ "Fri",
#     dayNumber == 6 ~ "Sat",
#     dayNumber == 7 ~ "Sun"
#   )
#   return(day)
# }
#
#
# getNextMonday = function(day, dayID) {
#   dayNum = getDayNumber(dayID)
#   nextMon = 7 - (dayNum - 1) + day
#   return(nextMon)
# }
#
# if (getDayNumber(lectureDays) != sort(getDayNumber(lectureDays))) {
#   stop("Please enter lecture day numbers in the correct order, e.g. 'Mon', 'Wed'. NOT 'Wed', 'Mon'")
# }
# "%y-%m-%d"
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, TRUE, FALSE)) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule %>%
kable(format = "markdown")
# getWeek(firstDay, firstDayID, 1)
#
# mon <- as.Date("2016-08-15")
#
# advdate <- function(obj, adv) {
#  tmon <- obj + 7*(adv-1)
#  tfri <- obj + 4 + 7*(adv-1)
#  tmon <- format(tmon, format="%m/%d")
#  tfri <- format(tfri, format="%m/%d")
#  zadv <- sprintf("%02d", adv)
#  tmp <- paste("Week ",zadv,sep='',", ", tmon," - ",tfri)
#  return(tmp)
# }
#
# advdate(mon, 1)
# advdate(mon, 2)
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date))
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
select(Date, holiday)
schedule
knitr::opts_chunk$set(echo = FALSE, include = FALSE)
# set these:
firstDay = as.Date("2022-01-07")
firstDayID = "Fri"
lastDay = as.Date("2022-04-20")
lectureDays = c("Wed", "Fri")
labDays = c("Tue")
holidays = as.Date(c("2022-03-08", "2022-03-09", "2022-03-11"))
### render table
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
select(Date, holiday)
schedule %>%
kable(format = "markdown")
schedule %>%
kable(format = "markdown")
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
select(Date, holiday) %>%
mutate(Week = NULL)
schedule
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(holiday = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
select(Date, holiday) %>%
mutate(Week = rep("", nrow(schedule)))
schedule
# set these:
firstDay = as.Date("2022-01-07")
firstDayID = "Fri"
lastDay = as.Date("2022-04-20")
lectureDays = c("Wed", "Fri")
labDays = c("Tue")
holidays = as.Date(c("2022-03-08", "2022-03-09", "2022-03-11"))
### render table
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(Topic = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
mutate(Week = rep("", nrow(schedule))) %>%
mutate(Prepare = rep("", nrow(schedule))) %>%
mutate(AE = rep("", nrow(schedule))) %>%
mutate(Assignment = rep("", nrow(schedule))) %>%
mutate(Exam = rep("", nrow(schedule))) %>%
mutate(Project = rep("", nrow(schedule))) %>%
select(Week, Date, Topic, Prepare, AE, Assignment, Exam, Project)
schedule %>%
kable(format = "markdown")
schedule
schedule %>%
kable(format = "markdown")
# For better figure resolution
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.retina = 3,
dpi = 300, fig.width = 6,
fig.asp = 0.618,
out.width = "75%",
fig.align = "center")
# set consistent theme
theme_set(ggplot2::theme_minimal())
library(tidyverse)
library(gridExtra) # side-by-side plots
training = read_csv("~/Downloads/training.csv")
training = training %>%
mutate(total = set1 + set2 + set3 + set4) %>%
rowwise() %>%
mutate(max = max(set1, set2, set3, set4))
# For better figure resolution
knitr::opts_chunk$set(warning = FALSE,
message = FALSE,
echo = FALSE,
fig.retina = 3,
dpi = 300, fig.width = 6,
fig.asp = 0.618,
out.width = "75%",
fig.align = "center")
# set consistent theme
theme_set(ggplot2::theme_minimal())
training
stop_server()
build_site()
serve_site()
stop_server()
stop_server(41132)
kill(41132)
stop_server()
build_site()
serve_site()
stop_server()
build_site()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
stop_server()
build_site()
serve_site()
build_site()
stop_server()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
stop_server()
build_site()
build_site()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
stop_server()
build_site()
build_site()
serve_site()
stop_server()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
schedule %>%
kable(format = "markdown")
knitr::opts_chunk$set(echo = TRUE)
plot(cars)
stop_server()
build_site()
serve_site()
stop_server()
build_site()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site(0)
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
knitr::opts_chunk$set(echo = FALSE, include = FALSE, eval=F)
# set these:
firstDay = as.Date("2022-06-27")
firstDayID = "Mon"
lastDay = as.Date("2022-08-04")
lectureDays = c("Mon", "Tue", "Thu")
labDays = c("Tue", "Thu")
holidays = as.Date(c("2022-07-04"))
### render table
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays)) %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(Topic = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
mutate(Week = rep("", nrow(schedule))) %>%
mutate(Prepare = rep("", nrow(schedule))) %>%
mutate(AE = rep("", nrow(schedule))) %>%
mutate(Assignment = rep("", nrow(schedule))) %>%
mutate(Exam = rep("", nrow(schedule))) %>%
mutate(Project = rep("", nrow(schedule))) %>%
select(Week, Date, Topic, Prepare, AE, Assignment, Exam, Project)
# set these:
firstDay = as.Date("2022-06-27")
firstDayID = "Mon"
lastDay = as.Date("2022-08-04")
lectureDays = c("Mon", "Tue", "Thu")
labDays = c("Tue", "Thu")
holidays = as.Date(c("2022-07-04"))
### render table
allDates = seq(from = firstDay, to = lastDay, by = 'day')
schedule = data.frame(allDates,
dayOfWeek = weekdays(allDates, abbreviate=T)) %>%
filter(dayOfWeek %in% c(lectureDays, labDays))
schedule = schedule %>%
mutate(lab = ifelse(dayOfWeek %in% labDays, TRUE, FALSE)) %>%
mutate(Topic = ifelse(allDates %in% holidays, "NO CLASS", "")) %>%
mutate(Date = format(allDates, format = "%b %d")) %>%
mutate(Date = paste(dayOfWeek, Date)) %>%
mutate(Week = rep("", nrow(schedule))) %>%
mutate(Prepare = rep("", nrow(schedule))) %>%
mutate(AE = rep("", nrow(schedule))) %>%
mutate(Assignment = rep("", nrow(schedule))) %>%
mutate(Exam = rep("", nrow(schedule))) %>%
mutate(Project = rep("", nrow(schedule))) %>%
select(Week, Date, Topic, Prepare, AE, Assignment, Exam, Project)
# to be pasted into console then pasted into markdown:
schedule %>%
kable(format = "markdown")
schedule %>%
kable(format = "markdown")
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
stop_server()
build_site()
serve_site()
